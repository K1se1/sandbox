cmake_minimum_required(VERSION 3.5.0)
project(sandbox VERSION 0.1.0 LANGUAGES C CXX)

set(GCC_CXX_FLAGS ${GCC_CXX_FLAGS} "-static-libgcc -static-libstdc++ -static-pthreads")
set(CMAKE_EXE_LINKER_FLAGS "-static")

list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_SOURCE_DIR}/cmake")

find_library(glfw3 REQUIRED NAMES libglfw3.a)
#find_package(glfw3 REQUIRED)
find_package(OpenGL REQUIRED)
include_directories(${OpenGL_INCLUDE_DIR})
include_directories(${GLFW3_INCLUDE_DIR})
add_library(glad STATIC "../glad/glad.h" "../glad/glad.c")
add_executable(sandbox main.cpp)
add_library(Shader STATIC Shader.hpp Shader.cpp)
add_library(Screen STATIC Screen.hpp Screen.cpp)
add_library(VBO STATIC VBO.hpp VBO.cpp)
add_library(VAO STATIC VAO.hpp VAO.cpp)
add_library(EBO STATIC EBO.hpp EBO.cpp)
add_library(InputProcessing STATIC InputProcessing.hpp InputProcessing.cpp)
add_library(GameField STATIC GameField.hpp GameField.cpp )
target_link_libraries(Screen glad glfw3 ${OPENGL_glu_LIBRARY} ${OPENGL_gl_LIBRARY} Shader VBO VAO EBO)
target_link_libraries(Shader glad glfw3 ${OPENGL_glu_LIBRARY} ${OPENGL_gl_LIBRARY})
target_link_libraries(VBO glad glfw3 ${OPENGL_glu_LIBRARY} ${OPENGL_gl_LIBRARY})
target_link_libraries(VAO glad glfw3 ${OPENGL_glu_LIBRARY} ${OPENGL_gl_LIBRARY} VBO)
target_link_libraries(EBO glad glfw3 ${OPENGL_glu_LIBRARY} ${OPENGL_gl_LIBRARY})
target_link_libraries(GameField glad glfw3 ${OPENGL_glu_LIBRARY} ${OPENGL_gl_LIBRARY} InputProcessing)
target_link_libraries(InputProcessing glfw3)
target_link_libraries(sandbox Screen Shader)
target_link_libraries(sandbox GameField)
